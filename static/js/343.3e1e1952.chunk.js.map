{"version":3,"file":"static/js/343.3e1e1952.chunk.js","mappings":"6OAGaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAKhB,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,OAAOC,KAAK,IAIrCC,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2FAOzBQ,EAAQV,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wHAOtB,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,OAAOO,IAAI,IAG5BC,GAAcb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2GAIpB,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,OAAOW,IAAI,IAKrCC,EAASjB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oQAKf,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,OAAOO,IAAI,IAC9B,SAAAT,GAAI,OAAIA,EAAKC,MAAMC,OAAOO,IAAI,IAC1C,SAAAT,GAAI,OAAIA,EAAKC,MAAMC,OAAOC,KAAK,IAKjB,SAAAH,GAAI,OAAIA,EAAKC,MAAMC,OAAOc,MAAM,IAClC,SAAAhB,GAAI,OAAIA,EAAKC,MAAMC,OAAOc,MAAM,IAC5C,SAAAhB,GAAI,OAAIA,EAAKC,MAAMC,OAAOC,KAAK,IAG1Bc,GAAQpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAoBsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,4CAChC,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,OAAOkB,KAAK,I,SClDlCC,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,MAAOF,EAAAA,KACAE,QACAC,SAAS,0BAChBC,SAAUJ,EAAAA,KACJK,IAAI,EAAG,sDAERF,SAAS,4BAILG,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAAOC,EAAAA,EAAAA,KAACnC,EAAS,CAAAoC,UACbD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACHC,cAjBc,CAClBV,MAAO,GACPE,SAAU,IAgBNS,SAZa,SAACC,EAAQC,GAC1B,IAAMC,EAAU,CACZd,MAAOY,EAAOZ,MACdE,SAAUU,EAAOV,UAErBG,GAASU,EAAAA,EAAAA,IAAMD,IACfD,EAAQG,WACZ,EAMQC,iBAAkBpB,EAAWW,UAC7BU,EAAAA,EAAAA,MAACtC,EAAU,CAACuC,aAAa,MAAKX,SAAA,EAC1BU,EAAAA,EAAAA,MAACnC,EAAK,CAAAyB,SAAA,CAAC,SAEHD,EAAAA,EAAAA,KAACrB,EAAW,CAACkC,KAAK,QAAQC,KAAK,WAC/Bd,EAAAA,EAAAA,KAACd,EAAK,CAAC4B,KAAK,QAAQC,UAAU,YAElCJ,EAAAA,EAAAA,MAACnC,EAAK,CAAAyB,SAAA,CAAC,YAEHD,EAAAA,EAAAA,KAACrB,EAAW,CAACkC,KAAK,WAAWC,KAAK,cAClCd,EAAAA,EAAAA,KAACd,EAAK,CAAC4B,KAAK,WAAWC,UAAU,YAElCf,EAAAA,EAAAA,KAACjB,EAAM,CAAE8B,KAAK,SAAQZ,SAAC,iBAK1C,ECpDe,SAASe,IACtB,OACEL,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACED,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAAhB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,aAETD,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\npadding: 80px 40px;\nmargin: 0 auto;\nwidth: 400px;\nheight: 450px;\nbackground-color:${prop => prop.theme.colors.light}; \nborder-radius: 4px;\n`;\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`; \n\nexport const Label = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  max-width: 100%;\n  width: 500px;\n  color: ${prop => prop.theme.colors.dark};\n`;\n\nexport const StyledField = styled(Field)`\npadding: 8px;\nmax-width: 100%;\n\nborder: 1px solid ${prop => prop.theme.colors.gray};\n  outline: 0;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 30px;\nwidth:180px;\nheight: 40px;\nborder-radius: 4px;\nborder: 1px solid ${prop => prop.theme.colors.dark};\nbackground-color: ${prop => prop.theme.colors.dark};\ncolor:${prop => prop.theme.colors.light};\ncursor:pointer;\n\n &:hover{\n  text-decoration: none;\n  border: 1px solid ${prop => prop.theme.colors.accent};\nbackground-color: ${prop => prop.theme.colors.accent};\ncolor:${prop => prop.theme.colors.light};\n}\n`;\nexport const Error = styled(ErrorMessage)`\ncolor: ${prop => prop.theme.colors.error};\nfont-style: italic;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from 'redux/auth/operations';\nimport { Container, StyledForm, StyledField, Label, Button, Error } from './LoginForm.styled';\n\nconst FormSchema = yup.object().shape({\n    email: yup.string()\n          .email()\n          .required('This field is required'),\n    password: yup.string()\n         .min(8, 'Password is too short - should be 8 chars minimum.')\n        //  .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n        .required('This field is required'),\n  \n });\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch();\n    const initialValues = {\n        email: '',\n        password: '',\n    \n    };\n    \n    const handleSubmit = (values, actions) => {\n        const payload = {\n            email: values.email,\n            password: values.password,\n        };\n        dispatch(logIn(payload));\n        actions.resetForm();\n    };\n\n    return <Container>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={FormSchema}>\n            <StyledForm autoComplete=\"off\">\n                <Label>\n                    Email\n                    <StyledField type=\"email\" name=\"email\" />\n                    <Error name=\"email\" component=\"div\" />\n                </Label>\n                <Label>\n                    Password\n                    <StyledField type=\"password\" name=\"password\" />\n                    <Error name=\"password\" component=\"div\" />\n                </Label>\n                   <Button  type=\"submit\">Log In</Button>\n            </StyledForm>\n        </Formik>\n         \n    </Container>\n};\n\n\n\n\n\n\n\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm.jsx';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","prop","theme","colors","light","StyledForm","Form","_templateObject2","Label","_templateObject3","dark","StyledField","Field","_templateObject4","gray","Button","_templateObject5","accent","Error","ErrorMessage","_templateObject6","error","FormSchema","yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","payload","logIn","resetForm","validationSchema","_jsxs","autoComplete","type","name","component","Login","Helmet"],"sourceRoot":""}