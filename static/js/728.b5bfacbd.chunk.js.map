{"version":3,"file":"static/js/728.b5bfacbd.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\npadding: 80px 40px;\nmargin: 40px auto;\nwidth: 400px;\nheight: 500px;\nbackground-color:${prop => prop.theme.colors.light}; \nborder-radius: 4px;\n`;\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`; \n\nexport const Label = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  max-width: 100%;\n  width: 500px;\n  color: ${prop => prop.theme.colors.dark};\n`;\n\nexport const StyledField = styled(Field)`\npadding: 8px;\nmax-width: 100%;\n\nborder: 1px solid ${prop => prop.theme.colors.gray};\n  outline: 0;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 30px;\nwidth:180px;\nheight: 40px;\nborder-radius: 4px;\nborder: 1px solid ${prop => prop.theme.colors.dark};\nbackground-color: ${prop => prop.theme.colors.dark};\ncolor:${prop => prop.theme.colors.light};\ncursor:pointer;\n\n &:hover{\n  text-decoration: none;\n  border: 1px solid ${prop => prop.theme.colors.accent};\nbackground-color: ${prop => prop.theme.colors.accent};\ncolor:${prop => prop.theme.colors.light};\n}\n`;\nexport const Error = styled(ErrorMessage)`\ncolor: ${prop => prop.theme.colors.error};\nfont-style: italic;\n`;\n","import { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { register } from 'redux/auth/operations';\nimport { Container, StyledForm, StyledField, Label, Button, Error } from './RegisterForm.styled'\n\nconst FormSchema = yup.object().shape({\n    name: yup.string()\n     .min(2, 'Too Short!')\n     .max(50, 'Too Long!')\n     .required('This field is required'),\n    email: yup.string().email()\n        .required('This field is required'),\n    password: yup.string()\n         .min(8, 'Password is too short - should be 8 chars minimum.')\n        //  .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n        .required('This field is required'),\n  \n });\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    const handleSubmit = (values, actions) => {\n        const payload = {\n             name: values.name,\n             email: values.email,\n             password: values.password,\n        };\n        \n      dispatch(register (payload));\n      actions.resetForm();\n    };\n    return <Container>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={FormSchema}>\n            <StyledForm>\n                <Label>\n                    Username\n                    <StyledField type=\"text\" name=\"name\" />\n                    <Error name=\"name\" component=\"div\" />\n                </Label>\n                <Label>\n                    Email\n                    <StyledField type=\"email\" name=\"email\" />\n                    <Error name=\"email\" component=\"div\" />\n                </Label>\n                <Label>\n                    Password\n                    <StyledField type=\"password\" name=\"password\" />\n                    <Error name=\"password\" component=\"div\" />\n                </Label>\n                <Button  type =\"submit\">Register</Button>\n            </StyledForm>\n\n        </Formik>\n    </Container>\n}\n\n\n\n\n\n\n\n\n\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm.jsx';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","prop","theme","colors","light","StyledForm","Form","_templateObject2","Label","_templateObject3","dark","StyledField","Field","_templateObject4","gray","Button","_templateObject5","accent","Error","ErrorMessage","_templateObject6","error","FormSchema","yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","payload","register","resetForm","validationSchema","_jsxs","type","component","Register","Helmet"],"sourceRoot":""}